<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>hu.elte.bfw1p6.poker</groupId>
	<artifactId>poker-persist</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>poker-persist</name>
	<description>A póker játék letárolásáért felelős modul</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jdbc.server.connection.url>jdbc:mysql://localhost:3306</jdbc.server.connection.url>
		<sql.file.path.prefix>src/main/resources/sql</sql.file.path.prefix>
		<create.db.schema.file.path>${sql.file.path.prefix}/poker-schema.sql</create.db.schema.file.path>
		<create.triggers.file.path>${sql.file.path.prefix}/poker-triggers.sql</create.triggers.file.path>
		<fill.db.file.path>${sql.file.path.prefix}/poker.sql</fill.db.file.path>
	</properties>
	
	<distributionManagement>
		<site>
			<id>${project.artifactId}-site</id>
			<name>Poker site</name>
			<url>D:/temp/site</url>
		</site>
	</distributionManagement>

	<profiles>
		<profile>
			<id>bootstrap</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.4.0</version>
						<configuration>
							<executable>mvn</executable>
							<arguments>
								<argument>sql:execute@create-db</argument>
								<argument>sql:execute@create-triggers</argument>
								<argument>sql:execute@fill-db</argument>
							</arguments>
						</configuration>
						<executions>
							<execution>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>hu.elte.bfw1p6.poker</groupId>
			<artifactId>poker-shared</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>
		<!-- specify the dependent jdbc driver here -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.6</version>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
						<compilerArguments>
							<bootclasspath>${sun.boot.class.path}${path.separator}${java.home}/lib/jfxrt.jar</bootclasspath>
						</compilerArguments>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>sql-maven-plugin</artifactId>
					<version>1.5</version>

					<dependencies>
						<!-- specify the dependent jdbc driver here -->
						<dependency>
							<groupId>mysql</groupId>
							<artifactId>mysql-connector-java</artifactId>
							<version>5.1.6</version>
						</dependency>
					</dependencies>

					<!-- common configuration shared by all executions -->
					<configuration>
						<driver>com.mysql.jdbc.Driver</driver>
						<url>${jdbc.server.connection.url}</url>
						<!-- https://maven.apache.org/guides/mini/guide-encryption.html -->
						<!-- ezt nyilván nem így kéne... -->
						<!-- You can comment out username/password configurations and have 
							maven to look them up in your settings.xml using ${settingsKey} -->
						<username>root</username>
						<password>1234</password>
						<settingsKey>sensibleKey</settingsKey>
					</configuration>

					<executions>
						<execution>
							<id>create-db</id>
							<phase>compile</phase>
							<goals>
								<goal>execute</goal>
							</goals>
							<configuration>
								<autocommit>true</autocommit>
								<srcFiles>
									<srcFile>${create.db.schema.file.path}</srcFile>
								</srcFiles>
								<!-- ignore error when database is not avaiable -->
								<onError>continue</onError>
							</configuration>
						</execution>
						<execution>
							<id>create-triggers</id>
							<phase>compile</phase>
							<goals>
								<goal>execute</goal>
							</goals>
							<configuration>
								<autocommit>true</autocommit>
								<delimiter>/</delimiter>
								<srcFiles>
									<srcFile>${create.triggers.file.path}</srcFile>
								</srcFiles>
								<!-- ignore error when database is not avaiable -->
								<onError>continue</onError>
							</configuration>
						</execution>
						<execution>
							<id>fill-db</id>
							<phase>compile</phase>
							<goals>
								<goal>execute</goal>
							</goals>
							<configuration>
								<!-- need another database to drop the targeted one -->
								<url>${jdbc.server.connection.url}</url>
								<autocommit>true</autocommit>
								<srcFiles>
									<srcFile>${fill.db.file.path}</srcFile>
								</srcFiles>
								<!-- ignore error when database is not avaiable -->
								<onError>continue</onError>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>